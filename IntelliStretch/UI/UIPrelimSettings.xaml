<UserControl x:Class="IntelliStretch.UI.UIPrelimSettings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:UserControls="clr-namespace:IntelliStretch.UserControls"
    xmlns:value_converters="clr-namespace:IntelliStretch.ValueConverters"
    x:Name="uiPrelimSettings" Loaded="uiPrelimSettings_Loaded">
    <UserControl.Resources>
        <value_converters:BoolScaleConverter x:Key="boolScaleConverter" />
        
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Slider Grid.Column="0" x:Name="sliderValuePicker" Margin="20" Orientation="Vertical" SmallChange="1" IsSnapToTickEnabled="True" ValueChanged="sliderValuePicker_ValueChanged" Opacity="0.0"/>

        <Grid RenderTransformOrigin="0.5,0.5" Grid.Column="2" HorizontalAlignment="Right">
            <Grid.RenderTransform>
                <ScaleTransform ScaleX="{Binding IsReflected, ElementName=uiPrelimSettings, Converter={StaticResource boolScaleConverter}, Mode=OneWay}" ScaleY="1" />
            </Grid.RenderTransform>
            <Image Source="{Binding GuideLinesImage, ElementName=uiPrelimSettings}" HorizontalAlignment="Right"/>
            <Image x:Name="imgNeutral" Source="{Binding NeutralImage, ElementName=uiPrelimSettings}" HorizontalAlignment="Right"/>
            <Image x:Name="imgFlexion" Source="{Binding FlexionImage, ElementName=uiPrelimSettings}" HorizontalAlignment="Right" Visibility="Collapsed"/>
            <Image x:Name="imgExtension" Source="{Binding ExtensionImage, ElementName=uiPrelimSettings}" HorizontalAlignment="Right" Visibility="Collapsed"/>
        </Grid>

        <UserControls:EmbeddedDialog
            DialogText="Please make sure your stop switch is enabled !" 
            HeaderColor="Yellow"
            DialogTitle="Caution" DialogWidth="240" 
            VerticalAlignment="Bottom"
            HorizontalAlignment="Right"
            Grid.Column="2"/>

        <StackPanel Grid.Column="1">
            <StackPanel>
                <TextBlock 
                        Height="24" 
                        Text="Neutral Position" 
                        TextWrapping="Wrap" 
                        FontWeight="Regular"
                        Foreground="{DynamicResource PrimaryTextColor}"
                        FontSize="16"
                        Margin="10,5,5,0"/>
                <Button
                        x:Name="setNeutral"
                        Content="Set zero"
                        GotFocus="setting_GotFocus"
                        Click="btnSetNeutral_Click" 
                        Height="36"
                        FontSize="16"
                        Margin="5,0,5,5">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#FF1039F2"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontWeight" Value="Regular"/>
                            <Setter Property="Padding" Value="5"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="1">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="Gray"/>
                                </Trigger>
                            </Style.Triggers>

                            <Style.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5" />
                                </Style>
                            </Style.Resources>
                        </Style>
                    </Button.Style>
                </Button>

                <UserControls:FlatTextButton x:Name="setFlexion" FontWeight="Bold" Caption="{Binding FlexionName, ElementName=uiPrelimSettings, StringFormat=Max {0}:}" ButtonText="Measure" GotFocus="setting_GotFocus" ButtonClick="Measure_ButtonClick"/>

                <UserControls:FlatTextButton x:Name="setExtension" FontWeight="Bold" Caption="{Binding ExtensionName, ElementName=uiPrelimSettings, StringFormat=Max {0}:}" Margin="0,5" 
                         ButtonText="Measure" GotFocus="setting_GotFocus" ButtonClick="Measure_ButtonClick"/>

                <Border x:Name="exRangeBdr" BorderThickness="2" CornerRadius="5" Grid.Row="4" GotFocus="exRangeBdr_GotFocus"  LostFocus="exRangeBdr_LostFocus" >
                    <StackPanel Orientation="Horizontal">
                        <StackPanel Margin="10,5">
                            <TextBlock  Height="24" Text="Extra Range" TextWrapping="Wrap" Foreground="{DynamicResource PrimaryTextColor}" FontSize="16" FontWeight="Regular"/>
                            <StackPanel Orientation= "Horizontal">
                                <TextBox
                                        x:Name="setExRange"
                                        Height="28"
                                        Width="100"
                                        TextWrapping="Wrap"
                                        Padding="10,0"
                                        FontSize="16"
                                        IsReadOnly="True"
                                        FontWeight="DemiBold"
                                        VerticalContentAlignment="Center">
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="5"/>
                                        </Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>
                            </StackPanel>
                        </StackPanel>
                        <UserControls:HorizontalScroller x:Name="exRangeScroller" Margin="0,5" VerticalAlignment="Bottom" HorizontalAlignment="Center" ButtonMinClick="exRangeScroller_ButtonMinClick" ButtonMaxClick="exRangeScroller_ButtonMaxClick"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <Button x:Name="btnApplyGeneralSettings" Content="Set" Height="50" Margin="0,25,0,0" 
                    HorizontalAlignment="Stretch" Click="btnApplyGeneralSettings_Click" FontSize="24">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Regular"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Gray"/>
                            </Trigger>
                        </Style.Triggers>

                        <Style.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5" />
                            </Style>
                        </Style.Resources>
                    </Style>
                </Button.Style>
            </Button>

            <UserControls:EmbeddedDialog
                Margin="0,25"
                x:Name="txtDataInfo"
                DialogTitle="Control Feedback" DialogWidth="240" 
                VerticalAlignment="Bottom"
                HorizontalAlignment="Right"
                Grid.Column="2"/>
        </StackPanel>
    </Grid>
</UserControl>
